# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # The build matrix that runs the job in a variation of job configurations
    strategy:
      matrix:
        python-version: ['3.8', '3.9']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash -l {0}

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        shell: bash -l {0}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: pipeline-env
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          condarc-file: condarc.yml
          auto-activate-base: false

      - name: Install package dependencies
        run: |
          sudo apt install libcurl4-openssl-dev
          if [ -f environment.yml ]; then mamba env update -n test -f environment.yml; fi
        shell: bash -l {0}

      - name: Conda installation
        run: mamba info
        shell: bash -l {0}

      - name: Conda packages
        run: mamba list
        shell: bash -l {0}
        
      - name: Pip information
        run: which pip
        shell: bash -l {0}
      
      - name: Run pipeline
        run: python pipeline.py make full -v 5 --local
        shell: bash -l {0}
